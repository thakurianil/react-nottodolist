{"version":3,"sources":["component/displayBadList.js","component/displayGoodList.js","component/calculateHours.js","component/form.js","component/home.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayBadLIst","_ref","badList","onChangeType","onDeleteType","totalBadHours","reduce","acc","value","parseFloat","hours","React","createElement","Fragment","className","id","map","index","key","scope","task","type","onClick","role","DisplayGoodLIst","goodList","onSelected","CalculateHours","props","totalHours","Form","generateId","string","i","Math","floor","random","length","formData","setFormData","useState","isChecked","submittedData","setSubmittedData","handleInputChange","e","name","target","[object Object]","goodTasks","filter","data","badTasks","changeTaskType","prevList","item","deleteTask","onSubmit","preventDefault","method","placeholder","onChange","DisplayGoodList","DisplayBadList","Home","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d1cfd826.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nfunction DisplayBadLIst({ badList, onChangeType, onDeleteType }) {\n  const totalBadHours = badList.reduce(\n    (acc, value) => acc + parseFloat(value.hours),\n    0\n  );\n\n  return (\n    <>\n      <div className=\"col-md-6 p-3 text-center\">\n        <h3>\n\n          Bad List\n        \n        </h3>\n\n        <hr />\n        <table className=\"table table-hover\">\n          <tbody id=\"BadList\">\n            {badList.map((value, index) => (\n              <tr key={value.id}>\n                <th scope=\"row\">{value.id}</th>\n                <td>{value.task}</td>\n                <td>{value.hours}</td>\n                <td className=\"text-end\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={() => onDeleteType(value.id)}\n                  >\n                    <i className=\"fa-solid fa-trash\"></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => onChangeType(value.id)}\n                  >\n                    <i className=\"fa-solid fa-arrow-left\"></i>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"alert alert-danger\" role=\"alert\" id=\"saved\">\n          You could have saved = {totalBadHours} hours\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DisplayBadLIst;\n","// This page is for displaying goodlist\nimport React from \"react\";\nfunction DisplayGoodLIst({ goodList, onChangeType, onDeleteType, onSelected }) {\n  \n  \n    return (\n    <>\n      <div className=\"col-md-6 p-3 text-center\">\n        <h3>\n\n          Entry List\n          \n        </h3>\n\n        <hr />\n        <table className=\"table table-hover\">\n          <tbody id=\"EntryList\">\n            {goodList.map((value, index) => (\n              <tr key={index}>\n                <th scope=\"row\">{value.id}</th>\n                \n\n                <td>{value.task}</td>\n                <td>{value.hours}</td>\n                <td className=\"text-end\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={() => onDeleteType(value.id)}\n                  >\n                    <i className=\"fa-solid fa-trash\"></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => onChangeType(value.id)}\n                  >\n                    <i className=\"fa-solid fa-arrow-right\"></i>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default DisplayGoodLIst;\n","import React from 'react';\n\nfunction CalculateHours(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div\n          className=\"alert alert-success text-center\"\n          role=\"alert\"\n          id=\"allocated\"\n        >\n          The total hours allocated = {props.totalHours} hours\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default CalculateHours;","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport DisplayBadList from \"./displayBadList\";\nimport DisplayGoodList from \"./displayGoodList\";\nimport CalculateHours from \"./calculateHours\";\nfunction Form() {\n  function generateId() {\n    let id = \"\";\n    const string =\n      \"1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\";\n\n    for (let i = 0; i < 6; i++) {\n      const idValue = Math.floor(Math.random() * string.length);\n      id += string[idValue];\n    }\n    return id;\n  }\n\n  const [formData, setFormData] = useState({\n    task: \"\",\n    hours: \"\",\n    type: \"good\",\n    id: \"\",\n    isChecked: false,\n  });\n\n  const [submittedData, setSubmittedData] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n\n  const handleFormSubmit = (e) => {\n    e.preventDefault(); \n\n    if (formData.task && formData.hours) {\n      const data = {\n        task: formData.task,\n        hours: formData.hours,\n        type: formData.type,\n        id: generateId(),\n      };\n\n      setSubmittedData([...submittedData, data]); \n\n      setFormData({ task: \"\", hours: \"\", type: \"good\" });\n    }\n  };\n\n  \n  const goodTasks = submittedData.filter((data) => data.type === \"good\");\n\n  const badTasks = submittedData.filter((data) => data.type === \"bad\");\n  const totalHours = submittedData.reduce(\n    (acc, value) => acc + parseFloat(value.hours),\n    0\n  );\n\n  const changeTaskType = (index) => {\n    setSubmittedData((prevList) =>\n      prevList.map((item, i) =>\n        item.id === index\n          ? { ...item, type: item.type === \"good\" ? \"bad\" : \"good\" }\n          : item\n      )\n    );\n  };\n\n  const deleteTask = (index) => {\n    setSubmittedData((prevList) =>\n      prevList.filter((item) => item.id !== index)\n    );\n  };\n\n  return (\n    <>\n      <div className=\"container border border-light rounded-5\">\n        <div className=\"row p-2 \">\n          <div className=\"Form\">\n            <form\n              name=\"myForm\"\n              onSubmit={handleFormSubmit}\n              id=\"myForm\"\n              method=\"post\"\n            >\n              <div className=\"row\">\n                <div className=\"col-5\">\n                  <div className=\"m-3\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"Task\"\n                      placeholder=\"Task\"\n                      name=\"task\"\n                      value={formData.task}\n                      onChange={handleInputChange} // Update state on change\n                    />\n                  </div>\n                </div>\n                <div className=\"col-3\">\n                  <div className=\"m-3\">\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"hours\"\n                      placeholder=\"Hours\"\n                      name=\"hours\"\n                      value={formData.hours}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-2\">\n                  <div className=\"m-3\">\n                    <select\n                      name=\"type\"\n                      value={formData.type}\n                      onChange={handleInputChange}\n                      className=\"form-control\"\n                    >\n                      <option value=\"good\">Good</option>\n                      <option value=\"bad\">Bad</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-2\">\n                  <button\n                    type=\"submit\"\n                    id=\"Addtask\"\n                    className=\"btn btn-primary m-3\"\n                  >\n                    Add New Task\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mt-4\">\n        <div className=\"row p-1\">\n          <DisplayGoodList\n            goodList={goodTasks}\n            onChangeType={changeTaskType}\n            onDeleteType={deleteTask}\n          />\n\n          <DisplayBadList\n            badList={badTasks}\n            onChangeType={changeTaskType}\n            onDeleteType={deleteTask}\n          />\n        </div>\n      </div>\n\n      <CalculateHours totalHours={totalHours} />\n    </>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"./form\";\n\nfunction Home() {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12  text-center p-3\">\n            <h1>Not To do list</h1>\n          </div>\n        </div>\n      </div>\n      <Form />\n\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\n\nimport Home from './component/home';\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n        <Home/>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}